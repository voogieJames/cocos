{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","macro","KEY","a","accLeft","d","accRight","KEY_UP","onLoad","jumpAction","node","runAction","xSpeed","start","update","dt","Math","abs","x"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY,CADJ;AAERC,sBAAc,CAFN;AAGRC,sBAAc,CAHN;AAIRC,eAAO;AAJC,KAHP;;AAULC,iBAVK,2BAUW;AACZ,YAAMC,SAASV,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,EAAH,CAAM,CAAN,EAAS,KAAKP,UAAd,CAA7B,EACVQ,MADU,CACHb,GAAGc,kBAAH,EADG,CAAf;;AAGA,YAAMC,WAAWf,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,EAAH,CAAM,CAAN,EAAS,CAAC,KAAKP,UAAf,CAA7B,EACZQ,MADY,CACLb,GAAGgB,iBAAH,EADK,CAAjB;;AAGA,eAAOhB,GAAGiB,aAAH,CAAiBjB,GAAGkB,QAAH,CAAYR,MAAZ,EAAoBK,QAApB,CAAjB,CAAP;AACH,KAlBI;AAoBLI,mBApBK,6BAoBa;AACd,YAAMC,OAAO,IAAb;AACA;AACA;AACA;AACApB,WAAGqB,WAAH,CAAeC,EAAf,CAAkBtB,GAAGuB,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,UAASC,KAAT,EAAgB;AACjE,oBAAOA,MAAMC,OAAb;AACI,qBAAK3B,GAAG4B,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACIV,yBAAKW,OAAL,GAAe,IAAf;AACA;AACJ,qBAAK/B,GAAG4B,KAAH,CAASC,GAAT,CAAaG,CAAlB;AACIZ,yBAAKa,QAAL,GAAgB,IAAhB;AACA;AANR;AAQH,SATD;;AAWA;AACAjC,WAAGqB,WAAH,CAAeC,EAAf,CAAkBtB,GAAGuB,WAAH,CAAeC,SAAf,CAAyBU,MAA3C,EAAmD,UAASR,KAAT,EAAgB;AAC/D,oBAAOA,MAAMC,OAAb;AACI,qBAAK3B,GAAG4B,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACIV,yBAAKW,OAAL,GAAe,KAAf;AACA;AACJ,qBAAK/B,GAAG4B,KAAH,CAASC,GAAT,CAAaG,CAAlB;AACIZ,yBAAKa,QAAL,GAAgB,KAAhB;AACA;AANR;AAQH,SATD;AAUH,KA/CI;;;AAiDL;;AAEAE,UAnDK,oBAmDI;AACL;AACA,aAAKC,UAAL,GAAkB,KAAK3B,aAAL,EAAlB;AACA,aAAK4B,IAAL,CAAUC,SAAV,CAAoB,KAAKF,UAAzB;;AAEA;AACA,aAAKL,OAAL,GAAe,KAAf;AACA,aAAKE,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKM,MAAL,GAAc,CAAd;AACA;AACA,aAAKpB,eAAL;AACH,KA/DI;AAiELqB,SAjEK,mBAiEG,CAEP,CAnEI;AAqELC,UArEK,kBAqEGC,EArEH,EAqEO;AACR;AACA,YAAI,KAAKX,OAAT,EAAkB;AACd,iBAAKQ,MAAL,IAAe,KAAK/B,KAAL,GAAakC,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKT,QAAT,EAAmB;AACtB,iBAAKM,MAAL,IAAe,KAAK/B,KAAL,GAAakC,EAA5B;AACH;AACD;AACA,YAAIC,KAAKC,GAAL,CAAS,KAAKL,MAAd,IAAwB,KAAKhC,YAAjC,EAA+C;AAC3C;AACA,iBAAKgC,MAAL,GAAc,KAAKhC,YAAL,GAAoB,KAAKgC,MAAzB,GAAkCI,KAAKC,GAAL,CAAS,KAAKL,MAAd,CAAhD;AACH;AACD;AACA,aAAKF,IAAL,CAAUQ,CAAV,IAAe,KAAKN,MAAL,GAAcG,EAA7B;AACH;AAnFI,CAAT","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        jumpHeight: 0,\n        jumpDuration: 0,\n        maxMoveSpeed: 0,\n        accel: 0\n    },\n\n    setJumpAction() {\n        const jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight))\n            .easing(cc.easeCubicActionOut());\n\n        const jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight))\n            .easing(cc.easeCubicActionIn());\n        \n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\n    },\n\n    setInputControl() {\n        const self = this;\n        // add keyboard event listener\n        // When there is a key being pressed down, check the designated direction \n        // and set up acceleration in the corresponding direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function(event) {\n            switch(event.keyCode) {\n                case cc.macro.KEY.a:\n                    self.accLeft = true;\n                    break;\n                case cc.macro.KEY.d:\n                    self.accRight = true;\n                    break;\n            }\n        });\n        \n        // when releasing the button, stop acceleration in this direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function(event) {\n            switch(event.keyCode) {\n                case cc.macro.KEY.a:\n                    self.accLeft = false;\n                    break;\n                case cc.macro.KEY.d:\n                    self.accRight = false;\n                    break;\n            }\n        })\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        //  init jump action\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n\n        //  acceleration direction switch\n        this.accLeft = false;\n        this.accRight = false;\n        //  current horizontal speed of main character\n        this.xSpeed = 0;\n        //  init keyboard input listener\n        this.setInputControl();\n    },\n\n    start() {\n\n    },\n\n    update (dt) {\n        // update speed of each frame according to the current acceleration direction\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // restrict the movement speed of the main character to the maximum movement speed\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            // if speed reaches its limit, use the max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n        //  update position of the character according to the current speed\n        this.node.x += this.xSpeed * dt\n    },\n});\n"]}